/**
 * NUCLEUS API
 * OpenMove public APIs documentation. NUCLEUS API exposes a set of APIs tuned to support efficient and easy integration with any customer and to provide the best experience for users. We would welcome the opportunity to refine the specifications better to match your use case. These APIs have a thin nature in order to answer focused questions with very short response times. Some of these APIs also assume a user context, which will allow rolling various IDâ€™s (such as stopId) between requests.
 *
 * OpenAPI spec version: 4.6.0
 * Contact: support@openmove.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.openmove.aroundsardinia;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class RouteRequest {
  
  @SerializedName("agencyId")
  private String agencyId = null;
  @SerializedName("routeLine")
  private String routeLine = null;
  @SerializedName("stopId")
  private String stopId = null;
  @SerializedName("type")
  private String type = null;
  @SerializedName("textSearch")
  private String textSearch = null;

  /**
   * agency id
   **/
  @ApiModelProperty(value = "agency id")
  public String getAgencyId() {
    return agencyId;
  }
  public void setAgencyId(String agencyId) {
    this.agencyId = agencyId;
  }

  /**
   * route short name
   **/
  @ApiModelProperty(value = "route short name")
  public String getRouteLine() {
    return routeLine;
  }
  public void setRouteLine(String routeLine) {
    this.routeLine = routeLine;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getStopId() {
    return stopId;
  }
  public void setStopId(String stopId) {
    this.stopId = stopId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getType() {
    return type;
  }
  public void setType(String type) {
    this.type = type;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getTextSearch() {
    return textSearch;
  }
  public void setTextSearch(String textSearch) {
    this.textSearch = textSearch;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RouteRequest routeRequest = (RouteRequest) o;
    return (this.agencyId == null ? routeRequest.agencyId == null : this.agencyId.equals(routeRequest.agencyId)) &&
        (this.routeLine == null ? routeRequest.routeLine == null : this.routeLine.equals(routeRequest.routeLine)) &&
        (this.stopId == null ? routeRequest.stopId == null : this.stopId.equals(routeRequest.stopId)) &&
        (this.type == null ? routeRequest.type == null : this.type.equals(routeRequest.type)) &&
        (this.textSearch == null ? routeRequest.textSearch == null : this.textSearch.equals(routeRequest.textSearch));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.agencyId == null ? 0: this.agencyId.hashCode());
    result = 31 * result + (this.routeLine == null ? 0: this.routeLine.hashCode());
    result = 31 * result + (this.stopId == null ? 0: this.stopId.hashCode());
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    result = 31 * result + (this.textSearch == null ? 0: this.textSearch.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class RouteRequest {\n");
    
    sb.append("  agencyId: ").append(agencyId).append("\n");
    sb.append("  routeLine: ").append(routeLine).append("\n");
    sb.append("  stopId: ").append(stopId).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("  textSearch: ").append(textSearch).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
