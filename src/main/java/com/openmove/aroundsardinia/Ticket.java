/**
 * NUCLEUS API
 * OpenMove public APIs documentation. NUCLEUS API exposes a set of APIs tuned to support efficient and easy integration with any customer and to provide the best experience for users. We would welcome the opportunity to refine the specifications better to match your use case. These APIs have a thin nature in order to answer focused questions with very short response times. Some of these APIs also assume a user context, which will allow rolling various IDâ€™s (such as stopId) between requests.
 *
 * OpenAPI spec version: 4.6.0
 * Contact: support@openmove.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.openmove.aroundsardinia;

import com.openmove.aroundsardinia.TicketFare;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Ticket {
  
  @SerializedName("originId")
  private String originId = null;
  @SerializedName("destinationId")
  private String destinationId = null;
  @SerializedName("containsId")
  private String containsId = null;
  @SerializedName("fareId")
  private String fareId = null;
  @SerializedName("provider")
  private String provider = null;
  @SerializedName("fare")
  private TicketFare fare = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getOriginId() {
    return originId;
  }
  public void setOriginId(String originId) {
    this.originId = originId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getDestinationId() {
    return destinationId;
  }
  public void setDestinationId(String destinationId) {
    this.destinationId = destinationId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getContainsId() {
    return containsId;
  }
  public void setContainsId(String containsId) {
    this.containsId = containsId;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getFareId() {
    return fareId;
  }
  public void setFareId(String fareId) {
    this.fareId = fareId;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getProvider() {
    return provider;
  }
  public void setProvider(String provider) {
    this.provider = provider;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public TicketFare getFare() {
    return fare;
  }
  public void setFare(TicketFare fare) {
    this.fare = fare;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ticket ticket = (Ticket) o;
    return (this.originId == null ? ticket.originId == null : this.originId.equals(ticket.originId)) &&
        (this.destinationId == null ? ticket.destinationId == null : this.destinationId.equals(ticket.destinationId)) &&
        (this.containsId == null ? ticket.containsId == null : this.containsId.equals(ticket.containsId)) &&
        (this.fareId == null ? ticket.fareId == null : this.fareId.equals(ticket.fareId)) &&
        (this.provider == null ? ticket.provider == null : this.provider.equals(ticket.provider)) &&
        (this.fare == null ? ticket.fare == null : this.fare.equals(ticket.fare));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.originId == null ? 0: this.originId.hashCode());
    result = 31 * result + (this.destinationId == null ? 0: this.destinationId.hashCode());
    result = 31 * result + (this.containsId == null ? 0: this.containsId.hashCode());
    result = 31 * result + (this.fareId == null ? 0: this.fareId.hashCode());
    result = 31 * result + (this.provider == null ? 0: this.provider.hashCode());
    result = 31 * result + (this.fare == null ? 0: this.fare.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ticket {\n");
    
    sb.append("  originId: ").append(originId).append("\n");
    sb.append("  destinationId: ").append(destinationId).append("\n");
    sb.append("  containsId: ").append(containsId).append("\n");
    sb.append("  fareId: ").append(fareId).append("\n");
    sb.append("  provider: ").append(provider).append("\n");
    sb.append("  fare: ").append(fare).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
