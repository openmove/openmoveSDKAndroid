/**
 * NUCLEUS API
 * OpenMove public APIs documentation. NUCLEUS API exposes a set of APIs tuned to support efficient and easy integration with any customer and to provide the best experience for users. We would welcome the opportunity to refine the specifications better to match your use case. These APIs have a thin nature in order to answer focused questions with very short response times. Some of these APIs also assume a user context, which will allow rolling various IDâ€™s (such as stopId) between requests.
 *
 * OpenAPI spec version: 4.6.0
 * Contact: support@openmove.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.openmove.aroundsardinia;

import java.math.BigDecimal;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class TicketRequestPSP {
  
  @SerializedName("agencyId")
  private String agencyId = null;
  @SerializedName("userId")
  private String userId = null;
  @SerializedName("cardId")
  private String cardId = null;
  @SerializedName("walletId")
  private String walletId = null;
  @SerializedName("fareId")
  private String fareId = null;
  @SerializedName("farePrice")
  private BigDecimal farePrice = null;
  @SerializedName("quantity")
  private Integer quantity = null;
  @SerializedName("transactionId")
  private String transactionId = null;

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getAgencyId() {
    return agencyId;
  }
  public void setAgencyId(String agencyId) {
    this.agencyId = agencyId;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getUserId() {
    return userId;
  }
  public void setUserId(String userId) {
    this.userId = userId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getCardId() {
    return cardId;
  }
  public void setCardId(String cardId) {
    this.cardId = cardId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getWalletId() {
    return walletId;
  }
  public void setWalletId(String walletId) {
    this.walletId = walletId;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getFareId() {
    return fareId;
  }
  public void setFareId(String fareId) {
    this.fareId = fareId;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getFarePrice() {
    return farePrice;
  }
  public void setFarePrice(BigDecimal farePrice) {
    this.farePrice = farePrice;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getQuantity() {
    return quantity;
  }
  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }

  /**
   * transaction id has to be unique
   **/
  @ApiModelProperty(value = "transaction id has to be unique")
  public String getTransactionId() {
    return transactionId;
  }
  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TicketRequestPSP ticketRequestPSP = (TicketRequestPSP) o;
    return (this.agencyId == null ? ticketRequestPSP.agencyId == null : this.agencyId.equals(ticketRequestPSP.agencyId)) &&
        (this.userId == null ? ticketRequestPSP.userId == null : this.userId.equals(ticketRequestPSP.userId)) &&
        (this.cardId == null ? ticketRequestPSP.cardId == null : this.cardId.equals(ticketRequestPSP.cardId)) &&
        (this.walletId == null ? ticketRequestPSP.walletId == null : this.walletId.equals(ticketRequestPSP.walletId)) &&
        (this.fareId == null ? ticketRequestPSP.fareId == null : this.fareId.equals(ticketRequestPSP.fareId)) &&
        (this.farePrice == null ? ticketRequestPSP.farePrice == null : this.farePrice.equals(ticketRequestPSP.farePrice)) &&
        (this.quantity == null ? ticketRequestPSP.quantity == null : this.quantity.equals(ticketRequestPSP.quantity)) &&
        (this.transactionId == null ? ticketRequestPSP.transactionId == null : this.transactionId.equals(ticketRequestPSP.transactionId));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.agencyId == null ? 0: this.agencyId.hashCode());
    result = 31 * result + (this.userId == null ? 0: this.userId.hashCode());
    result = 31 * result + (this.cardId == null ? 0: this.cardId.hashCode());
    result = 31 * result + (this.walletId == null ? 0: this.walletId.hashCode());
    result = 31 * result + (this.fareId == null ? 0: this.fareId.hashCode());
    result = 31 * result + (this.farePrice == null ? 0: this.farePrice.hashCode());
    result = 31 * result + (this.quantity == null ? 0: this.quantity.hashCode());
    result = 31 * result + (this.transactionId == null ? 0: this.transactionId.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class TicketRequestPSP {\n");
    
    sb.append("  agencyId: ").append(agencyId).append("\n");
    sb.append("  userId: ").append(userId).append("\n");
    sb.append("  cardId: ").append(cardId).append("\n");
    sb.append("  walletId: ").append(walletId).append("\n");
    sb.append("  fareId: ").append(fareId).append("\n");
    sb.append("  farePrice: ").append(farePrice).append("\n");
    sb.append("  quantity: ").append(quantity).append("\n");
    sb.append("  transactionId: ").append(transactionId).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
