/**
 * NUCLEUS API
 * OpenMove public APIs documentation. NUCLEUS API exposes a set of APIs tuned to support efficient and easy integration with any customer and to provide the best experience for users. We would welcome the opportunity to refine the specifications better to match your use case. These APIs have a thin nature in order to answer focused questions with very short response times. Some of these APIs also assume a user context, which will allow rolling various IDâ€™s (such as stopId) between requests.
 *
 * OpenAPI spec version: 4.6.0
 * Contact: support@openmove.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.openmove.aroundsardinia;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class UserTicketStatus {
  
  @SerializedName("active")
  private Boolean active = null;
  @SerializedName("purchased")
  private Boolean purchased = null;
  @SerializedName("validated")
  private Boolean validated = null;

  /**
   * true if ticket is active
   **/
  @ApiModelProperty(value = "true if ticket is active")
  public Boolean getActive() {
    return active;
  }
  public void setActive(Boolean active) {
    this.active = active;
  }

  /**
   * true if ticket payment completed succesful
   **/
  @ApiModelProperty(value = "true if ticket payment completed succesful")
  public Boolean getPurchased() {
    return purchased;
  }
  public void setPurchased(Boolean purchased) {
    this.purchased = purchased;
  }

  /**
   * true if ticket has at least one check
   **/
  @ApiModelProperty(value = "true if ticket has at least one check")
  public Boolean getValidated() {
    return validated;
  }
  public void setValidated(Boolean validated) {
    this.validated = validated;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserTicketStatus userTicketStatus = (UserTicketStatus) o;
    return (this.active == null ? userTicketStatus.active == null : this.active.equals(userTicketStatus.active)) &&
        (this.purchased == null ? userTicketStatus.purchased == null : this.purchased.equals(userTicketStatus.purchased)) &&
        (this.validated == null ? userTicketStatus.validated == null : this.validated.equals(userTicketStatus.validated));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.active == null ? 0: this.active.hashCode());
    result = 31 * result + (this.purchased == null ? 0: this.purchased.hashCode());
    result = 31 * result + (this.validated == null ? 0: this.validated.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserTicketStatus {\n");
    
    sb.append("  active: ").append(active).append("\n");
    sb.append("  purchased: ").append(purchased).append("\n");
    sb.append("  validated: ").append(validated).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
